/*!
  * Bootstrap Native v2.0.27 (https://thednp.github.io/bootstrap.native/)
  * Copyright 2016-2019 © dnp_theme
  * Licensed under MIT (https://github.com/thednp/bootstrap.native/blob/master/LICENSE)
  */
(function(root,factory){if(typeof define==="function"&&define.amd){define([],factory)}else if(typeof module==="object"&&module.exports){module.exports=factory()}else{root.BSN=factory()}})(this,function(){

"use strict";
// Native Javascript for Bootstrap 4 v2.0.27 | © dnp_theme | MIT-License
var BSN = {};
var supports = !!('querySelector' in document && 'addEventListener' in window) && 'classList' in document.documentElement,
    // Native Javascript 
    mouseHoverEvents = ('onmouseleave' in document) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],
    mouseClickEvents = { down: 'mousedown', up: 'mouseup' };

// Get Element
var queryElement = function (selector, parent) {
  var lookUp = parent ? parent : document;
  return selector instanceof Element ? selector : lookUp.querySelector(selector);
};

// Collapse
function Collapse(element, options) {
  options = options || {};
  this.element = queryElement(element);
  this.parent = options.parent ? queryElement(options.parent) : null;
  this.duration = parseInt(options.duration) || 350;
  this.collapsed = this.element.classList.contains('show') ? false : true;
  this.toggle = this.toggle.bind(this);

  document.addEventListener('click', this.toggle, false);
}

Collapse.prototype = {
  toggle: function(e) {
    var element = e.target,
        dataTarget = element.getAttribute('data-target') || element.getAttribute('href');

    if (dataTarget && (dataTarget === '#' + this.element.id || dataTarget === '.' + this.element.className.split(' ')[0])) {
      e.preventDefault();
      
      if (this.collapsed) {
        this.show();
      } else {
        this.hide();
      }
    }
  },
  
  show: function() {
    var that = this;
    this.element.classList.add('collapsing');
    this.element.classList.remove('collapse');
    this.element.style.height = this.element.scrollHeight + 'px';
    
    setTimeout(function() {
      that.element.classList.remove('collapsing');
      that.element.classList.add('collapse', 'show');
      that.element.style.height = '';
      that.collapsed = false;
    }, this.duration);
  },
  
  hide: function() {
    var that = this;
    this.element.style.height = this.element.scrollHeight + 'px';
    setTimeout(function() {
      that.element.classList.add('collapsing');
      that.element.classList.remove('collapse', 'show');
      that.element.style.height = '0px';
    }, 5);
    
    setTimeout(function() {
      that.element.classList.remove('collapsing');
      that.element.classList.add('collapse');
      that.element.style.height = '';
      that.collapsed = true;
    }, this.duration);
  }
};

// Mobile Menu Toggle
function MobileMenu(element) {
  this.element = queryElement(element);
  this.body = document.body;
  this.mobileMenuToggle = document.querySelector('.js-menu-toggle');
  this.mobileMenu = document.querySelector('.site-mobile-menu');
  this.mobileMenuClose = document.querySelector('.site-mobile-menu-close');
  this.hasChildren = document.querySelectorAll('.site-mobile-menu .has-children');
  
  if (this.mobileMenuToggle) {
    this.mobileMenuToggle.addEventListener('click', this.toggle.bind(this));
  }
  
  if (this.mobileMenuClose) {
    this.mobileMenuClose.addEventListener('click', this.close.bind(this));
  }
  
  // Setup arrow collapse for submenus
  if (this.hasChildren.length > 0) {
    for (var i = 0; i < this.hasChildren.length; i++) {
      var arrow = this.hasChildren[i].querySelector('.arrow-collapse');
      if (arrow) {
        arrow.addEventListener('click', this.toggleChildren.bind(this));
      }
    }
  }
  
  // Close menu when clicking outside
  document.addEventListener('mouseup', this.clickOutside.bind(this));
  
  // Resize handler
  window.addEventListener('resize', this.resize.bind(this));
}

MobileMenu.prototype = {
  toggle: function(e) {
    e.preventDefault();
    if (this.body.classList.contains('offcanvas-menu')) {
      this.close();
    } else {
      this.open();
    }
  },
  
  open: function() {
    this.body.classList.add('offcanvas-menu');
    if (this.mobileMenuToggle) {
      this.mobileMenuToggle.classList.add('active');
    }
  },
  
  close: function() {
    this.body.classList.remove('offcanvas-menu');
    if (this.mobileMenuToggle) {
      this.mobileMenuToggle.classList.remove('active');
    }
  },
  
  toggleChildren: function(e) {
    e.preventDefault();
    var arrowCollapse = e.target;
    var targetId = arrowCollapse.getAttribute('data-target');
    
    if (targetId) {
      var target = document.querySelector(targetId);
      if (target) {
        if (target.classList.contains('show')) {
          target.classList.remove('show');
          arrowCollapse.classList.remove('active');
        } else {
          target.classList.add('show');
          arrowCollapse.classList.add('active');
        }
      }
    }
  },
  
  clickOutside: function(e) {
    if (this.mobileMenu && !this.mobileMenu.contains(e.target) && this.body.classList.contains('offcanvas-menu')) {
      this.close();
    }
  },
  
  resize: function() {
    if (window.innerWidth > 768 && this.body.classList.contains('offcanvas-menu')) {
      this.close();
    }
  }
};

// Initialize components
BSN.Collapse = Collapse;
BSN.MobileMenu = MobileMenu;

return BSN;
});
